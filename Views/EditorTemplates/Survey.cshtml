@using System.Globalization
@using System.Web.Mvc.Html
@model Belitsoft.Orchard.Survey.Models.SurveyPart
@{
    Script.Require("jQuery").AtHead();
}

@using (Script.Foot())
{
    <script type="text/javascript">
        //<![CDATA[
        function addOption() {
            var lastId = parseInt($("#option tr .start-value input").last().attr("id").replace("text.StartValue", ""));
            var countOfOption = lastId + 1;
            var tr = $("<tr>");
            var tdStart = $("<td  class='start-value' style='padding-top: 10px; padding-right: 10px;'>");

            var inputStartValue = $('<input class="text" name="text.StartValue' + countOfOption + '" id="text.StartValue' + countOfOption + '" maxlength="6" type="text" style="width: 99%">');

            var tdText = $("<td style='padding-top:10px;'>");
            var inputText = $('<input class="text-box"  name="text.Answer' + countOfOption + '" id="text.Answer' + countOfOption + '" type="text" style="width: 99%" maxlength="1024"/>');
            var tdButton = $("<td style='width: 167px;'>");
            var aAdd = $('<a onclick="addOption();" class="button">@T("Add")</a>&nbsp;');
            var aRemove = $('<a onclick="removeOption(this);" class="button">@T("Remove")</a>');

            $(tdStart).append($(inputStartValue));

            $(tdButton).append($(aAdd));
            $(tdButton).append("&nbsp;");
            $(tdButton).append($(aRemove));

            $(tdText).append($(inputText));

            $(tr).append($(tdStart));
            $(tr).append($(tdText));
            $(tr).append($(tdButton));

            $("#option").append($(tr));

            AddNumericValidation();

            return false;
        }

        function removeOption(current) {
            $($(current).parent().parent()).
                remove();
        }

        function AddNumericValidation() {
            $(".start-value .text").each(function() {
                $(this).keypress(function(event) {

                    var key = event.
                        which || event.
                            keyCode; //use event.which if it's truthy, and default to keyCode otherwise

                    // Allow: backspace, delete, tab, and enter
                    var controlKeys = [
                        8,
                        9,
                        13];
                    //for mozilla these are arrow keys
                    if ($.
                        browser.mozilla)
                        controlKeys = controlKeys.concat([37, 38, 39, 40]);

                    // Ctrl+ anything or one of the conttrolKeys is valid
                    var isControlKey = event.
                        ctrlKey || controlKeys.join(",").match(new RegExp(key));

                    if (isControlKey) {
                        return;
                    }

                    // stop current key press if it's not a number
                    if (!(48 <= key && key <= 57)) {
                        event.
                            preventDefault();
                        return;
                    }
                }
                );
            }
            );

            $(".start-value .text").each(function() {
                $(this).keyup(function() {
                    //to allow decimals,use/[^0-9\.]/g 
                    var regex = new RegExp(/[^0-9]/g);
                    var containsNonNumeric = this.value.match(regex);
                    if (containsNonNumeric)
                        this.value = this.value.replace(regex, '');
                }
                );
            }
            );
        }

        $(document).ready(function() {
            $("form").attr("onSubmit", "return checkform()");
            AddNumericValidation();
        }
        );

        function checkform() {
            var texts = $("#option").find("input.text-box");
            var isValid = true;
            for (var i = 0; i < texts.length; i++) {
                if ($(texts[i]).val() == "") {
                    isValid = false;
                }
            }

            if (!isValid) {
                if ($(".validation-summary-errors")) {
                    $('div[data-value="option_cant_be_empty"]').remove();
                    var errorSummary = $('<div class="validation-summary-errors" data-value="option_cant_be_empty"><ul><li ></li></ul></div>');
                    $(errorSummary).find("li").text("@T("option_cant_be_empty")");
                    $("form").prepend(errorSummary);
                } else {
                    $(".validation-summary-errors").find("ul").append($("<li>@T("option_cant_be_empty")</li>"));
                }

            }
            return isValid;
        }
    //]]>
    </script>
}
<br />


<table id="option" style="width: 100%">
    <tr>
        <th style="width: 80px;">
            <label class="" style="">@T("StartValue")</label>
        </th>
        <th>
            <label class="required">@T("AnswerOptions")</label>
        </th>
        <th></th>
    </tr>


    @{if (Model.Answers.Count == 0)
      {
        <tr>
            <td class="start-value" style="padding-top: 10px; padding-right: 10px;">
                <input class="text" name="text.StartValue0" id="text.StartValue0" maxlength="6" type="text" style="width: 99%" />
            </td>

            <td style="padding-top: 10px;">
                <input class="text-box" name="text.Answer0" id="text.Answer0" maxlength="1024" type="text" style="width: 99%" />
            </td>
            <td style="width: 167px;">
                <a  class="button" onclick="addOption()">@T("Add")</a>
            </td>
        </tr>
        <tr>
            <td class="start-value" style="padding-top: 10px; padding-right: 10px;">
                <input class="text" name="text.StartValue1" id="text.StartValue1" maxlength="6" type="text" style="width: 99%" />
            </td>
            <td style="padding-top: 10px;">
                <input class="text-box" name="text.Answer1" id="text.Answer1" maxlength="1024" type="text" style="width: 99%" />
            </td>
            <td style="width: 167px;">
                <a  class="button" onclick="addOption()">@T("Add")</a>
            </td>
        </tr>
      }
      else
      {
          for (int i = 0; i < Model.Answers.Count; i++)
          {
        <tr>
            @Html.Hidden("answer.Id" + i, Model.Answers[i].Id)
            <td class="start-value" style="padding-top: 10px; padding-right: 10px;">
                <input class="text" name="@("text.StartValue" + i)" id="@("text.StartValue" + i)" maxlength="6" type="text" value="@(Model.Answers[i].StartValue == 0 ? "" : Model.Answers[i].StartValue.ToString())" style="width: 99%" />
            </td>
            <td style="padding-top: 10px;">
                <input class="text-box" name="@("text.Answer" + i)" id="@("text.Answer" + i)" type="text"  maxlength="1024" value="@Model.Answers[i].Text" style="width: 99%" />
            </td>
            <td style="width: 167px;">
                <a href="#" class="button" onclick="addOption()">@T("Add")</a>
                @if (i >= 2)
                {
                    <a  class="button" onclick="removeOption(this)">@T("Delete")</a>
                      
                }
            </td>

        </tr>
          }
      }
    }
</table>
<br />



@Html.CheckBoxFor(p => p.IsNotShowResultAfterAnswer, new { @class = "check-box" })
<label class="sub" for="IsNotShowResultAfterAnswer">@T("IsShowResultAfterAnswer")</label><br />
